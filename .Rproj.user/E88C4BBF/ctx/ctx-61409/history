knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(plotly)
library(glue)
library(scales)
library(tidyr)
library(ggpubr)
library(lubridate)
library(echarts4r)
salary <- read.csv("data_science_salaries.csv")
head(salary)
salary <- read.csv("data_science_salaries.csv")
head(salary)
salary <- read.csv("data_science_salaries.csv")
head(salary)
yr <- as.Date(as.character(yrs), format = "%Y")
yr <- as.Date(as.character(work_year), format = "%Y")
salary <- read.csv("data_science_salaries.csv")
head(salary)
yr <- as.Date(as.character(work_year), format = "%Y")
salary <- read.csv("data_science_salaries.csv")
head(salary)
yr <- as.Date(as.character(work_year), format = "%Y")
yr <- as.Date((work_year), format = "%Y")
yr <- as.Date(('work_year'), format = "%Y")
yr <- as.Date(('work_year'), format = "%Y")
work_year <- year(yr)
head(salary)
work_year <- as.Date(('work_year'), format = "%Y")
head(salary)
salary$work_year <- as.Date(('work_year'), format = "%Y")
head(salary)
salary <- read.csv("data_science_salaries.csv")
head(salary)
salary$work_year <- as.Date((salary$work_year), format = "%Y")
head(salary)
salary$work_year <- as.Date((salary$work_year, origin="2020-01-01"), format = "%Y")
exp_chart <- scm %>%
group_by(experience_level) %>%
summarise(n = n()) %>%
rename(
"Total Data" = n
)
exp_chart <- salary %>%
group_by(experience_level) %>%
summarise(n = n()) %>%
rename(
"Total Data" = n
)
exp_chart
pie1 <- exp_chart %>%
e_charts(experience_level) %>%
e_pie(`Total Data`, radius = c("50%", "70%")) %>%
e_title("Experience_level \n Composition",
left = "center",
top = "center") %>%
e_tooltip() %>%
e_labels(show = TRUE,
formatter = "{b} \n {d}%",
position = "outside"
) %>%
e_legend(orient = "vertical",
left = "right",
top = "50px")
pie1
emp_chart <- salary %>%
group_by(employment_type) %>%
summarise(n = n()) %>%
rename(
"Total Data" = n
)
emp_chart
pie2 <- exp_chart %>%
e_charts(employment_type) %>%
e_pie(`Total Data`, radius = c("50%", "70%")) %>%
e_title("Employment Type \n Composition",
left = "center",
top = "center") %>%
e_tooltip() %>%
e_labels(show = TRUE,
formatter = "{b} \n {d}%",
position = "outside"
) %>%
e_legend(orient = "vertical",
left = "right",
top = "50px")
pie2 <- emp_chart %>%
e_charts(employment_type) %>%
e_pie(`Total Data`, radius = c("50%", "70%")) %>%
e_title("Employment Type \n Composition",
left = "center",
top = "center") %>%
e_tooltip() %>%
e_labels(show = TRUE,
formatter = "{b} \n {d}%",
position = "outside"
) %>%
e_legend(orient = "vertical",
left = "right",
top = "50px")
pie2
rmt_chart <- salary %>%
group_by(remote_ratio) %>%
summarise(n = n()) %>%
rename(
"Total Data" = n
)
rmt_chart
pie3 <- rmt_chart %>%
e_charts(remote_ratio) %>%
e_pie(`Total Data`, radius = c("50%", "70%")) %>%
e_title("Remote Ratio \n Composition",
left = "center",
top = "center") %>%
e_tooltip() %>%
e_labels(show = TRUE,
formatter = "{b} \n {d}%",
position = "outside"
) %>%
e_legend(orient = "vertical",
left = "right",
top = "50px")
pie3
pie4 <- cmp_chart %>%
e_charts(company_size) %>%
e_pie(`Total Data`, radius = c("50%", "70%")) %>%
e_title("Company Size \n Composition",
left = "center",
top = "center") %>%
e_tooltip() %>%
e_labels(show = TRUE,
formatter = "{b} \n {d}%",
position = "outside"
) %>%
e_legend(orient = "vertical",
left = "right",
top = "50px")
cmp_chart <- salary %>%
group_by(company_size) %>%
summarise(n = n()) %>%
rename(
"Total Data" = n
)
emp_chart
cmp_chart <- salary %>%
group_by(company_size) %>%
summarise(n = n()) %>%
rename(
"Total Data" = n
)
emp_chart
cmp_chart <- salary %>%
group_by(company_size) %>%
summarise(n = n()) %>%
rename(
"Total Data" = n
)
cmp_chart
pie4 <- cmp_chart %>%
e_charts(company_size) %>%
e_pie(`Total Data`, radius = c("50%", "70%")) %>%
e_title("Company Size \n Composition",
left = "center",
top = "center") %>%
e_tooltip() %>%
e_labels(show = TRUE,
formatter = "{b} \n {d}%",
position = "outside"
) %>%
e_legend(orient = "vertical",
left = "right",
top = "50px")
pie4
cry_chart <- salary %>%
group_by(salary_currency) %>%
summarise(n = n()) %>%
rename(
"Total Data" = n
)
cry_chart
shiny::runApp()
install.packages("shinyWidgets")
library(shinyWidgets)
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
library(tidyverse)
runApp()
View(salary)
shiny::runApp()
runApp()
runApp()
shiny::runApp()
knitr::opts_chunk$set(echo = TRUE)
fig <- salary %>%
plot_ly(
x = ~experience_level,
y = ~salary_in_usd,
split = ~experience_level,
type = 'violin',
box = list(
visible = T
),
meanline = list(
visible = T
)
)
fig <- fig %>%
layout(
xaxis = list(
title = "Experience Level"
),
yaxis = list(
title = "Salary",
zeroline = FALSE
)
)
fig
library(dplyr)
library(plotly)
library(glue)
library(scales)
library(tidyr)
library(ggpubr)
library(lubridate)
library(echarts4r)
salary <- read.csv("data_science_salaries.csv")
runApp()
shiny::runApp()
knitr::opts_chunk$set(echo = TRUE)
cry_chart <- salary %>%
group_by(salary_currency) %>%
summarise(n = n()) %>%
rename(
"total_data" = n
)%>%
arrange(total_data)
cry_chart
cry_chart <- salary %>%
group_by(salary_currency) %>%
summarise(n = n()) %>%
rename(
"total_data" = n
)%>%
arrange(total_data)
cry_chart
bar1 <- cry_chart %>%
e_charts(salary_currency) %>%
e_bar(total_data,
name = "total_data",
legend = FALSE
) %>%
e_flip_coords() %>%
e_labels(position = "right",
formatter = htmlwidgets::JS("
function (params) {
return (parseFloat(params.value[0]).toLocaleString('en-US'));
}
")
) %>%
e_y_axis(show=TRUE) %>%
e_tooltip(formatter = e_tooltip_item_formatter(locale = 'en-US')) %>%
e_color("#163ec2") %>%
e_title(text = "salary currency distribution",
left = "center")
bar1
bar1 <- cry_chart %>%
e_charts(salary_currency) %>%
e_bar(total_data,
name = "total_data",
legend = FALSE
) %>%
e_flip_coords() %>%
e_labels(position = "right",
formatter = htmlwidgets::JS("
function (params) {
return (parseFloat(params.value[0]).toLocaleString('en-US'));
}
")
) %>%
e_y_axis(show=TRUE) %>%
e_tooltip() %>%
e_color("#163ec2") %>%
e_title(text = "salary currency distribution",
left = "center")
bar1
runApp()
runApp()
shiny::runApp()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(plotly)
library(glue)
library(scales)
library(tidyr)
library(ggpubr)
library(lubridate)
library(echarts4r)
salary <- read.csv("data_science_salaries.csv")
salary <- salary %>%
arrange(work_year)
head(salary)
library(dplyr)
library(plotly)
library(glue)
library(scales)
library(tidyr)
library(ggpubr)
library(lubridate)
library(echarts4r)
salary <- read.csv("data_science_salaries.csv")
salary <- salary %>%
arrange(work_year)
head(salary)
runApp()
dummies <- dummyVars(~ ., data= salary)
library(dplyr)
library(plotly)
library(glue)
library(scales)
library(tidyr)
library(ggpubr)
library(lubridate)
library(echarts4r)
library(caret)
library(tidyverse)
salary <- read.csv("data_science_salaries.csv")
salary <- salary %>%
arrange(work_year)
head(salary)
dummies <- dummyVars(~ ., data= salary)
test <- predict(dummies, newdata = salary)
test
dummies <- dummyVars(~ ., data= salary %>% select(experience_level, salary_in_usd))
test <- predict(dummies, newdata = salary)
test
data<-cor(test)
data1<-melt(data)
library(reshape2)
data<-cor(test)
data1<-melt(data)
heatmap <- data1 %>%
e_charts(Var1) %>%
e_heatmap(Var2, value, itemStyle = list(emphasis = list(shadowBlur = 10))) %>%
e_visual_map(value) %>%
e_labels(position='inside')
heatmap
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
install.packages("BH")
install.packages("BH")
shiny::runApp()
runApp()
shiny::runApp()
knitr::opts_chunk$set(echo = TRUE)
dummies <- dummyVars(~ ., data= salary %>% select(experience_level, salary_in_usd))
test <- predict(dummies, newdata = salary)
data<-cor(test)
data1<-melt(data)
colnames(data1) <-colnames(str_remove(data1, 'experience_level'))
library(dplyr)
library(plotly)
library(glue)
library(scales)
library(tidyr)
library(ggpubr)
library(lubridate)
library(echarts4r)
library(caret)
library(tidyverse)
library(reshape2)
salary <- read.csv("data_science_salaries.csv")
dummies <- dummyVars(~ ., data= salary %>% select(experience_level, salary_in_usd))
test <- predict(dummies, newdata = salary)
data<-cor(test)
data1<-melt(data)
colnames(data1) <-colnames(str_remove(data1, 'experience_level'))
data1
dummies <- dummyVars(~ ., data= salary %>% select(experience_level, salary_in_usd))
test <- predict(dummies, newdata = salary)
data<-cor(test)
data1<-melt(data)
data1<-gsub('experience_level',"",as.character(data1))
data1
shiny::runApp()
shiny::runApp()
